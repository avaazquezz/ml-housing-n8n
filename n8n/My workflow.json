{
  "name": "My workflow",
  "nodes": [
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "id": "39c58269-8e98-445e-bcfb-65d38212c3aa",
      "name": "Telegram Trigger",
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1,
      "position": [
        -560,
        112
      ],
      "webhookUrl": "your-ngrok-url-here",
      "webhookId": "ff19dbe2-88ee-4a12-b6d1-c50c02b69339",
      "credentials": {
        "telegramApi": {
          "id": "MVXBBJhbbrytqftq",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "const message = $json[\"message\"][\"text\"].trim(); \nlet mode;\n\nif (message === '/start') {\n  mode = 'welcome';\n} else if (/^\\d+([,.]\\d+)*([,\\s]\\d+([,.]\\d+)*)*$/.test(message)) {\n  mode = 'predict';\n} else {\n  mode = 'error';\n}\n\nreturn [{\n  json: {\n    chat_id: $json[\"message\"][\"chat\"][\"id\"],\n    message,\n    mode: mode.trim() \n  }\n}];\n"
      },
      "name": "Code",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        -384,
        112
      ],
      "id": "61256dba-e7c5-4de8-a3c0-0f42119171ba"
    },
    {
      "parameters": {
        "chatId": "={{$json[\"chat_id\"]}}",
        "text": "Estimated price: ‚Ç¨{{$node[\"HTTP Request\"].json[\"prediction\"]}}",
        "additionalFields": {}
      },
      "name": "Send Prediction",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1,
      "position": [
        224,
        -48
      ],
      "id": "a85b83cc-0052-4c71-a29c-02cbf2fe6137",
      "webhookId": "5e13e30c-4085-4727-a5cd-1c54e29ffb03",
      "credentials": {
        "telegramApi": {
          "id": "MVXBBJhbbrytqftq",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{$json[\"chat_id\"]}}",
        "text": "=üëã Welcome to the *Housing Price Predictor Bot*! üè†\n\nTo get an estimated price for a house, please send the required data in this exact order, **separated by commas**:\n\n1Ô∏è‚É£ MedInc ‚Üí Median Income (in tens of thousands of dollars)  \n2Ô∏è‚É£ HouseAge ‚Üí Age of the house (in years)  \n3Ô∏è‚É£ AveRooms ‚Üí Average number of rooms  \n4Ô∏è‚É£ AveBedrms ‚Üí Average number of bedrooms  \n5Ô∏è‚É£ Population ‚Üí Population in the area  \n6Ô∏è‚É£ AveOccup ‚Üí Average household occupancy  \n7Ô∏è‚É£ Latitude ‚Üí Geographic latitude  \n8Ô∏è‚É£ Longitude ‚Üí Geographic longitude\n\nüìå Example (copy & paste):\n\n4.2,15,5.3,1.2,1800,3.1,34.05,-118.25\n\n\nüîπ Make sure to:\n- Use **dots** for decimals (e.g. `3.1`, not `3,1`)\n- Add no spaces between values\n- Send only numbers in the correct order\n\nOnce I receive your message in the correct format, I‚Äôll return an estimated price üíµ using machine learning.\n\n",
        "additionalFields": {}
      },
      "name": "Send Welcome",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1,
      "position": [
        64,
        128
      ],
      "id": "0956714f-1141-4703-966c-12697ef40b76",
      "webhookId": "2bb4e83a-8adf-4492-b0d2-7b15a6377e9d",
      "credentials": {
        "telegramApi": {
          "id": "MVXBBJhbbrytqftq",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{$json[\"chat_id\"]}}",
        "text": "=‚ö†Ô∏è Invalid input format.\n\nPlease send the data as **8 comma-separated numbers**, in the following order:\n\nMedInc,HouseAge,AveRooms,AveBedrms,Population,AveOccup,Latitude,Longitude\n\n\nüìå Correct example:\n4.2,15,5.3,1.2,1800,3.1,34.05,-118.25\n\n\nüî∏ Make sure you:\n- Use periods for decimals (e.g. 2.5)\n- Include no spaces between values\n- Do not add extra text\n\nTry again when ready ‚Äî I‚Äôm here to help you predict housing prices! üìä\n\n\n\n",
        "additionalFields": {}
      },
      "name": "Send Error",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1,
      "position": [
        16,
        336
      ],
      "id": "667d8943-96b8-4ae0-a662-b6ca1f07bd02",
      "webhookId": "63d3bcdb-2743-4064-9193-19e0ec3d6b59",
      "credentials": {
        "telegramApi": {
          "id": "MVXBBJhbbrytqftq",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json[\"mode\"] }}  ",
                    "rightValue": "=predict",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "2cfaaf32-7e12-4e3c-849f-aaf8af5353c9"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "c09f9412-1708-4f67-b611-94ccbc019f5e",
                    "leftValue": "={{ $json[\"mode\"] }}  ",
                    "rightValue": "=welcome",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "aa2a1acf-e684-4a62-80e4-c0e82f254994",
                    "leftValue": "={{ $json[\"mode\"] }}  ",
                    "rightValue": "=error",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -176,
        96
      ],
      "id": "343c9b1d-c767-4503-bf1f-df9d08d2d211",
      "name": "Switch"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api:8000/predict-from-string",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "=input",
              "value": "={{$json.message}}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        0,
        -48
      ],
      "id": "9a8b4fbc-f6c3-47cb-a593-f5d73074cb7d",
      "name": "HTTP Request"
    }
  ],
  "pinData": {},
  "connections": {
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send Welcome",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Send Prediction",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "59ab7c70-a389-4374-882a-34141bf35b6d",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "809b52874c59e921a7ac865fec233b962ffa99093ac334c8fced28793228cfcf"
  },
  "id": "dNVhXtWOKYVm9yew",
  "tags": []
}