{
  "name": "Workflow_HPP-ML",
  "nodes": [
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "id": "b3528dec-3b54-4be8-a385-bc2a29bddddf",
      "name": "Telegram Trigger",
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1,
      "position": [
        -560,
        160
      ],
      "webhookUrl": "your-ngrok-url-here",
      "webhookId": "ff19dbe2-88ee-4a12-b6d1-c50c02b69339",
      "credentials": {
        "telegramApi": {
          "id": "LrsVa9MWpFhvnFll",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "// Code node: detectar modo (welcome / predict / error)\n// Lee correctamente tanto message.text (Telegram) como message directo.\nconst message = ($json?.message?.text ?? $json?.message ?? $json?.text ?? \"\").toString().trim();\n\nlet mode = \"\";\nconst m = message.toLowerCase();\n\n// /start -> welcome\nif (m === \"/start\") {\n  mode = \"welcome\";\n} \n// Predict -> exactamente 8 n√∫meros separados por comas (acepta decimales con . o , y signos -)\nelse if (/^\\s*-?\\d+([.,]\\d+)?\\s*(,\\s*-?\\d+([.,]\\d+)?\\s*){7}$/.test(message)) {\n  mode = \"predict\";\n} \n// En cualquier otro caso -> error\nelse {\n  mode = \"error\";\n}\n\nreturn [{\n  json: {\n    chat_id: $json?.message?.chat?.id ?? $json?.chat_id ?? null,\n    message,\n    mode\n  }\n}];\n"
      },
      "name": "Code",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        -384,
        160
      ],
      "id": "1520d31e-6a6d-462d-81ab-495f9d8c5fcd"
    },
    {
      "parameters": {
        "chatId": "={{$node[\"Switch\"].json[\"chat_id\"]}}",
        "text": "={{$node[\"HTTP Request\"].json[\"message_html\"]}}",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "name": "Send Prediction",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1,
      "position": [
        464,
        -16
      ],
      "id": "2a9f05b6-055a-4eb6-9ae9-af222f9b9f0a",
      "webhookId": "5e13e30c-4085-4727-a5cd-1c54e29ffb03",
      "credentials": {
        "telegramApi": {
          "id": "LrsVa9MWpFhvnFll",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{$json[\"chat_id\"]}}",
        "text": "=üëã Welcome to the *Housing Price Predictor Bot*! üè†\n\nTo get an estimated price for a house, please send the required data in this exact order, **separated by commas**:\n\n1Ô∏è‚É£ MedInc ‚Üí Median Income (in tens of thousands of dollars)  \n2Ô∏è‚É£ HouseAge ‚Üí Age of the house (in years)  \n3Ô∏è‚É£ AveRooms ‚Üí Average number of rooms  \n4Ô∏è‚É£ AveBedrms ‚Üí Average number of bedrooms  \n5Ô∏è‚É£ Population ‚Üí Population in the area  \n6Ô∏è‚É£ AveOccup ‚Üí Average household occupancy  \n7Ô∏è‚É£ Latitude ‚Üí Geographic latitude  \n8Ô∏è‚É£ Longitude ‚Üí Geographic longitude\n\nüìå Example (copy & paste):\n\n4.2,15,5.3,1.2,1800,3.1,34.05,-118.25\n\n\nüîπ Make sure to:\n- Use **dots** for decimals (e.g. `3.1`, not `3,1`)\n- Add no spaces between values\n- Send only numbers in the correct order\n\nOnce I receive your message in the correct format, I‚Äôll return an estimated price üíµ using machine learning.\n\n",
        "additionalFields": {}
      },
      "name": "Send Welcome",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1,
      "position": [
        64,
        176
      ],
      "id": "b959811d-030e-4358-9668-7b52f470c5a6",
      "webhookId": "2bb4e83a-8adf-4492-b0d2-7b15a6377e9d",
      "credentials": {
        "telegramApi": {
          "id": "LrsVa9MWpFhvnFll",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{$json[\"chat_id\"]}}",
        "text": "=‚ö†Ô∏è Invalid input format.\n\nPlease send the data as **8 comma-separated numbers**, in the following order:\n\nMedInc,HouseAge,AveRooms,AveBedrms,Population,AveOccup,Latitude,Longitude\n\n\nüìå Correct example:\n4.2,15,5.3,1.2,1800,3.1,34.05,-118.25\n\n\nüî∏ Make sure you:\n- Use periods for decimals (e.g. 2.5)\n- Include no spaces between values\n- Do not add extra text\n\nTry again when ready ‚Äî I‚Äôm here to help you predict housing prices! üìä\n\n\n\n",
        "additionalFields": {}
      },
      "name": "Send Error",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1,
      "position": [
        64,
        384
      ],
      "id": "d37e1ff4-de3c-4041-96e7-c09507a366fc",
      "webhookId": "63d3bcdb-2743-4064-9193-19e0ec3d6b59",
      "credentials": {
        "telegramApi": {
          "id": "LrsVa9MWpFhvnFll",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://50c8e604b988.ngrok-free.app/predict-from-string",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "=input",
              "value": "={{$json.message}}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        256,
        -16
      ],
      "id": "14fdab72-188a-42c1-b586-0a3c18c858be",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{$json[\"mode\"]}}",
                    "rightValue": "predict",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "e8d5ac5a-77da-4a32-b7a8-09a6ad1c5a5c"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "ce92b40e-5fa9-4f6b-86ed-b254a075a943",
                    "leftValue": "={{$json[\"mode\"]}}",
                    "rightValue": "welcome",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b55b564d-4fba-4d28-be11-6723485212c4",
                    "leftValue": "={{$json[\"mode\"]}}",
                    "rightValue": "error",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -176,
        160
      ],
      "id": "a351c6ab-a444-4601-96e0-c64b8b6cf207",
      "name": "Switch"
    }
  ],
  "pinData": {
    "Telegram Trigger": [
      {
        "json": {
          "update_id": 525909693,
          "message": {
            "message_id": 48,
            "from": {
              "id": 1140982759,
              "is_bot": false,
              "first_name": "Adri",
              "language_code": "es"
            },
            "chat": {
              "id": 1140982759,
              "first_name": "Adri",
              "type": "private"
            },
            "date": 1755972158,
            "text": "/start",
            "entities": [
              {
                "offset": 0,
                "length": 6,
                "type": "bot_command"
              }
            ]
          }
        }
      }
    ]
  },
  "connections": {
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Send Prediction",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send Welcome",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "828abecf-04e3-447e-9f09-af3d38fa947a",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "4e03bbc35bd7e3c702e29bc16f6e4d62f3b0e48534cbb8d263c08c203c7e9826"
  },
  "id": "ii3pmL1eQc5YiCP8",
  "tags": []
}